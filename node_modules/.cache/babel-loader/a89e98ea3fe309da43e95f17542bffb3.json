{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Mario/Desktop/UNF Fullstack Academy Projects/Project_15_MTG Deck Builder/Test MTG Deck Builder/deckbuilder/src/index.js\";\n// inside src/index.js\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n//import axios from \"axios\";\n// const App = () => {\n//   return (\n//     <div id=\"app\">\n//       <div id=\"search\">\n//         <h3>Look up cards here...</h3>\n//         <form>\n//           <input type=\"text\" placeholder=\"card search\" />\n//           <button type=\"submit\">Search</button>\n//         </form>\n//       </div>\n//       <div id=\"results\">\n//         <h3>Here's what we found:</h3>\n//       </div>\n//       <div id=\"deck\">\n//         <h3>Your deck so far:</h3>\n//       </div>\n//     </div>\n//   );\n// };\n//-------------------------------------------Version 2---------------------------------\n// import ReactDOM from \"react-dom\";\n// import { fetchCards } from \"./api\";\n// import React, { useState } from \"react\";\n// //import axios from \"axios\";\n// import { DeckList, SearchBar, SearchResults } from \"./components\";\n// const App = () => {\n//   fetchCards().then(console.log);\n//   const [results, setResults] = useState([]);\n//   return (\n//     <div id=\"app\">\n//       <SearchBar setResults={setResults} />\n//       <SearchResults results={results} />\n//       <DeckList />\n//     </div>\n//   );\n// };\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n//--------------------------------------Version 3-----------------------------------------\n// inside src/index.js\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DeckList from \"./components/DeckList\";\nimport SearchBar from \"./components/SearchBar\";\nimport SearchResults from \"./components/SearchResults\";\nimport { fetchCards } from \"./api\";\nimport \"./index.css\";\nimport axios from \"axios\"; // A component is a JS function that returns JSX (or HTML)\n// Good practice is to make component start with an uppercase letter\n// The JSX returned by your component has to have one parent / root element\n\nconst App = () => {\n  console.log(\"rendering APP\");\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]); // we NEVER can directly update state\n\n  const addCardToDeck = ({\n    id,\n    name\n  }) => {\n    const nextDeck = [...deck]; // make a duplicate first\n\n    const index = nextDeck.findIndex(card => card.id === id); // index will be -1 if it is not found\n\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1\n      });\n    }\n\n    setDeck(nextDeck);\n  };\n\n  const removeCardFromDeck = ({\n    id\n  }) => {\n    const nextDeck = [...deck]; // let arr = [ {id: 90834920, name: 'bananas'}, {id: 384902, name: 'apples'} ];\n    // arr[1].name = 'mangos';\n\n    const index = nextDeck.findIndex(card => card.id === id);\n\n    if (index === -1) {\n      // don't do anything if we're trying to remove a card not in the deck\n      return;\n    }\n\n    if (nextDeck[index].count === 1) {\n      // remove the card altogether\n      nextDeck.splice(index, 1);\n    } else {\n      // decrement the count\n      nextDeck[index].count -= 1;\n    }\n\n    setDeck(nextDeck);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    setResults: setResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    results: results,\n    removeCardFromDeck: removeCardFromDeck,\n    addCardToDeck: addCardToDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DeckList, {\n    deck: deck,\n    removeCardFromDeck: removeCardFromDeck,\n    addCardToDeck: addCardToDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\")); //---------------------------------------------Version 4-------------------------------------------------------","map":{"version":3,"sources":["/mnt/c/Users/Mario/Desktop/UNF Fullstack Academy Projects/Project_15_MTG Deck Builder/Test MTG Deck Builder/deckbuilder/src/index.js"],"names":["React","useState","ReactDOM","DeckList","SearchBar","SearchResults","fetchCards","axios","App","console","log","results","setResults","deck","setDeck","addCardToDeck","id","name","nextDeck","index","findIndex","card","count","push","removeCardFromDeck","splice","render","document","getElementById"],"mappings":"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","sourcesContent":["// inside src/index.js\r\n\r\n// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n\r\n//import axios from \"axios\";\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <div id=\"app\">\r\n//       <div id=\"search\">\r\n//         <h3>Look up cards here...</h3>\r\n//         <form>\r\n//           <input type=\"text\" placeholder=\"card search\" />\r\n//           <button type=\"submit\">Search</button>\r\n//         </form>\r\n//       </div>\r\n//       <div id=\"results\">\r\n//         <h3>Here's what we found:</h3>\r\n//       </div>\r\n//       <div id=\"deck\">\r\n//         <h3>Your deck so far:</h3>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n//-------------------------------------------Version 2---------------------------------\r\n\r\n// import ReactDOM from \"react-dom\";\r\n// import { fetchCards } from \"./api\";\r\n// import React, { useState } from \"react\";\r\n\r\n// //import axios from \"axios\";\r\n\r\n// import { DeckList, SearchBar, SearchResults } from \"./components\";\r\n\r\n// const App = () => {\r\n//   fetchCards().then(console.log);\r\n//   const [results, setResults] = useState([]);\r\n//   return (\r\n//     <div id=\"app\">\r\n//       <SearchBar setResults={setResults} />\r\n//       <SearchResults results={results} />\r\n//       <DeckList />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n//--------------------------------------Version 3-----------------------------------------\r\n\r\n// inside src/index.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport DeckList from \"./components/DeckList\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport SearchResults from \"./components/SearchResults\";\r\n\r\nimport { fetchCards } from \"./api\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// A component is a JS function that returns JSX (or HTML)\r\n// Good practice is to make component start with an uppercase letter\r\n// The JSX returned by your component has to have one parent / root element\r\nconst App = () => {\r\n  console.log(\"rendering APP\");\r\n\r\n  const [results, setResults] = useState([]);\r\n  const [deck, setDeck] = useState([]);\r\n\r\n  // we NEVER can directly update state\r\n  const addCardToDeck = ({ id, name }) => {\r\n    const nextDeck = [...deck]; // make a duplicate first\r\n    const index = nextDeck.findIndex((card) => card.id === id);\r\n\r\n    // index will be -1 if it is not found\r\n    if (index > -1) {\r\n      nextDeck[index].count += 1;\r\n    } else {\r\n      nextDeck.push({\r\n        id,\r\n        name,\r\n        count: 1,\r\n      });\r\n    }\r\n\r\n    setDeck(nextDeck);\r\n  };\r\n\r\n  const removeCardFromDeck = ({ id }) => {\r\n    const nextDeck = [...deck];\r\n    // let arr = [ {id: 90834920, name: 'bananas'}, {id: 384902, name: 'apples'} ];\r\n    // arr[1].name = 'mangos';\r\n    const index = nextDeck.findIndex((card) => card.id === id);\r\n\r\n    if (index === -1) {\r\n      // don't do anything if we're trying to remove a card not in the deck\r\n      return;\r\n    }\r\n\r\n    if (nextDeck[index].count === 1) {\r\n      // remove the card altogether\r\n      nextDeck.splice(index, 1);\r\n    } else {\r\n      // decrement the count\r\n      nextDeck[index].count -= 1;\r\n    }\r\n\r\n    setDeck(nextDeck);\r\n  };\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <SearchBar setResults={setResults} />\r\n      <SearchResults\r\n        results={results}\r\n        removeCardFromDeck={removeCardFromDeck}\r\n        addCardToDeck={addCardToDeck}\r\n      />\r\n      <DeckList\r\n        deck={deck}\r\n        removeCardFromDeck={removeCardFromDeck}\r\n        addCardToDeck={addCardToDeck}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n//---------------------------------------------Version 4-------------------------------------------------------\r\n"]},"metadata":{},"sourceType":"module"}