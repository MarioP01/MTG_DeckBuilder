{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Mario/Desktop/UNF Fullstack Academy Projects/Project_15_MTG Deck Builder/Test MTG Deck Builder/deckbuilder/src/index.js\";\n// inside src/index.js\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n//import axios from \"axios\";\n// const App = () => {\n//   return (\n//     <div id=\"app\">\n//       <div id=\"search\">\n//         <h3>Look up cards here...</h3>\n//         <form>\n//           <input type=\"text\" placeholder=\"card search\" />\n//           <button type=\"submit\">Search</button>\n//         </form>\n//       </div>\n//       <div id=\"results\">\n//         <h3>Here's what we found:</h3>\n//       </div>\n//       <div id=\"deck\">\n//         <h3>Your deck so far:</h3>\n//       </div>\n//     </div>\n//   );\n// };\n//-------------------------------------------Version 2---------------------------------\n// import ReactDOM from \"react-dom\";\n// import { fetchCards } from \"./api\";\n// import React, { useState } from \"react\";\n// //import axios from \"axios\";\n// import { DeckList, SearchBar, SearchResults } from \"./components\";\n// const App = () => {\n//   fetchCards().then(console.log);\n//   const [results, setResults] = useState([]);\n//   return (\n//     <div id=\"app\">\n//       <SearchBar setResults={setResults} />\n//       <SearchResults results={results} />\n//       <DeckList />\n//     </div>\n//   );\n// };\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n//--------------------------------------Version 3-----------------------------------------\n//inside src/index.js\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\"; //import DeckList from \"./components/DeckList\";\n\nimport SearchBar from \"./components/SearchBar\";\nimport SearchResults from \"./components/SearchResults\";\nimport { fetchCards } from \"./api\";\nimport \"./index.css\";\nimport axios from \"axios\"; // A component is a JS function that returns JSX (or HTML)\n// Good practice is to make component start with an uppercase letter\n// The JSX returned by your component has to have one parent / root element\n// const App = () => {\n//   console.log(\"rendering APP\");\n//   const [results, setResults] = useState([]);\n//   const [deck, setDeck] = useState([]);\n//   // we NEVER can directly update state\n//   function addCardToDeck(cardId, name) {\n//     console.log(\"adding card to deck...\");\n//     console.log(cardId);\n//     // const deckCopy = deck; <- FAKE copy\n//     const newDeck = [...deck]; // <- REAL copy\n//     // is this card already in our deck?\n//     const index = newDeck.findIndex((card) => card.id === cardId);\n//     // if so, just update the count of the existing object\n//     if (index > -1) {\n//       newDeck[index].count = newDeck[index].count + 1;\n//     } else {\n//       newDeck.push({ id: cardId, name: name, count: 1 });\n//     }\n//     setDeck(newDeck);\n//   }\n//   const removeCardFromDeck = ({ id }) => {\n//     const nextDeck = [...deck];\n//     // let arr = [ {id: 90834920, name: 'bananas'}, {id: 384902, name: 'apples'} ];\n//     // arr[1].name = 'mangos';\n//     const index = nextDeck.findIndex((card) => card.id === id);\n//     if (index === -1) {\n//       // don't do anything if we're trying to remove a card not in the deck\n//       return;\n//     }\n//     if (nextDeck[index].count === 1) {\n//       // remove the card altogether\n//       nextDeck.splice(index, 1);\n//     } else {\n//       // decrement the count\n//       nextDeck[index].count -= 1;\n//     }\n//     setDeck(nextDeck);\n//   };\n//   return (\n//     <div id=\"app\">\n//       <SearchBar setResults={setResults} />\n//       <SearchResults\n//         results={results}\n//         removeCardFromDeck={removeCardFromDeck}\n//         addCardToDeck={addCardToDeck}\n//       />\n//       <DeckList deck={deck} />\n//     </div>\n//   );\n// };\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n//---------------------------------------------Version 4-------------------------------------------------------\n//import React from \"react\";\n\nconst DeckList = ({\n  deck,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count;\n  }, 0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Your deck so far (\", cardCount, \" cards):\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeckList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, deck.map(({\n    id,\n    name,\n    count\n  }) => /*#__PURE__*/React.createElement(\"p\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"(\", count, \"x) \", name), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addCardToDeck({\n      id,\n      name\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \" + \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeCardFromDeck({\n      id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \" - \")))));\n};\n\nexport default DeckList;","map":{"version":3,"sources":["/mnt/c/Users/Mario/Desktop/UNF Fullstack Academy Projects/Project_15_MTG Deck Builder/Test MTG Deck Builder/deckbuilder/src/index.js"],"names":["React","useState","ReactDOM","SearchBar","SearchResults","fetchCards","axios","DeckList","deck","addCardToDeck","removeCardFromDeck","cardCount","reduce","card","count","map","id","name"],"mappings":";AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,SAASC,UAAT,QAA2B,OAA3B;AAEA,OAAO,aAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,aAAR;AAAuBC,EAAAA;AAAvB,CAAD,KAAiD;AAChE,MAAIC,SAAS,GAAGH,IAAI,CAACI,MAAL,CAAY,CAACD,SAAD,EAAYE,IAAZ,KAAqB;AAC/C,WAAOF,SAAS,GAAGE,IAAI,CAACC,KAAxB;AACD,GAFe,EAEb,CAFa,CAAhB;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBH,SAAvB,aADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACO,GAAL,CAAS,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYH,IAAAA;AAAZ,GAAD,kBACR;AAAG,IAAA,GAAG,EAAEE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACIF,KADJ,SACcG,IADd,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMR,aAAa,CAAC;AAAEO,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMP,kBAAkB,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CADD,CADH,CAFF,CADF;AAiBD,CAtBD;;AAwBA,eAAeT,QAAf","sourcesContent":["// inside src/index.js\r\n\r\n// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n\r\n//import axios from \"axios\";\r\n\r\n// const App = () => {\r\n//   return (\r\n//     <div id=\"app\">\r\n//       <div id=\"search\">\r\n//         <h3>Look up cards here...</h3>\r\n//         <form>\r\n//           <input type=\"text\" placeholder=\"card search\" />\r\n//           <button type=\"submit\">Search</button>\r\n//         </form>\r\n//       </div>\r\n//       <div id=\"results\">\r\n//         <h3>Here's what we found:</h3>\r\n//       </div>\r\n//       <div id=\"deck\">\r\n//         <h3>Your deck so far:</h3>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n//-------------------------------------------Version 2---------------------------------\r\n\r\n// import ReactDOM from \"react-dom\";\r\n// import { fetchCards } from \"./api\";\r\n// import React, { useState } from \"react\";\r\n\r\n// //import axios from \"axios\";\r\n\r\n// import { DeckList, SearchBar, SearchResults } from \"./components\";\r\n\r\n// const App = () => {\r\n//   fetchCards().then(console.log);\r\n//   const [results, setResults] = useState([]);\r\n//   return (\r\n//     <div id=\"app\">\r\n//       <SearchBar setResults={setResults} />\r\n//       <SearchResults results={results} />\r\n//       <DeckList />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n//--------------------------------------Version 3-----------------------------------------\r\n\r\n//inside src/index.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//import DeckList from \"./components/DeckList\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport SearchResults from \"./components/SearchResults\";\r\n\r\nimport { fetchCards } from \"./api\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// A component is a JS function that returns JSX (or HTML)\r\n// Good practice is to make component start with an uppercase letter\r\n// The JSX returned by your component has to have one parent / root element\r\n// const App = () => {\r\n//   console.log(\"rendering APP\");\r\n\r\n//   const [results, setResults] = useState([]);\r\n//   const [deck, setDeck] = useState([]);\r\n\r\n//   // we NEVER can directly update state\r\n//   function addCardToDeck(cardId, name) {\r\n//     console.log(\"adding card to deck...\");\r\n//     console.log(cardId);\r\n//     // const deckCopy = deck; <- FAKE copy\r\n\r\n//     const newDeck = [...deck]; // <- REAL copy\r\n//     // is this card already in our deck?\r\n//     const index = newDeck.findIndex((card) => card.id === cardId);\r\n//     // if so, just update the count of the existing object\r\n//     if (index > -1) {\r\n//       newDeck[index].count = newDeck[index].count + 1;\r\n//     } else {\r\n//       newDeck.push({ id: cardId, name: name, count: 1 });\r\n//     }\r\n//     setDeck(newDeck);\r\n//   }\r\n\r\n//   const removeCardFromDeck = ({ id }) => {\r\n//     const nextDeck = [...deck];\r\n//     // let arr = [ {id: 90834920, name: 'bananas'}, {id: 384902, name: 'apples'} ];\r\n//     // arr[1].name = 'mangos';\r\n//     const index = nextDeck.findIndex((card) => card.id === id);\r\n\r\n//     if (index === -1) {\r\n//       // don't do anything if we're trying to remove a card not in the deck\r\n//       return;\r\n//     }\r\n\r\n//     if (nextDeck[index].count === 1) {\r\n//       // remove the card altogether\r\n//       nextDeck.splice(index, 1);\r\n//     } else {\r\n//       // decrement the count\r\n//       nextDeck[index].count -= 1;\r\n//     }\r\n\r\n//     setDeck(nextDeck);\r\n//   };\r\n\r\n//   return (\r\n//     <div id=\"app\">\r\n//       <SearchBar setResults={setResults} />\r\n//       <SearchResults\r\n//         results={results}\r\n//         removeCardFromDeck={removeCardFromDeck}\r\n//         addCardToDeck={addCardToDeck}\r\n//       />\r\n//       <DeckList deck={deck} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n//---------------------------------------------Version 4-------------------------------------------------------\r\n\r\n//import React from \"react\";\r\n\r\nconst DeckList = ({ deck, addCardToDeck, removeCardFromDeck }) => {\r\n  let cardCount = deck.reduce((cardCount, card) => {\r\n    return cardCount + card.count;\r\n  }, 0);\r\n\r\n  return (\r\n    <div id=\"deck\">\r\n      <h3>Your deck so far ({cardCount} cards):</h3>\r\n      <div className=\"DeckList\">\r\n        {deck.map(({ id, name, count }) => (\r\n          <p key={id}>\r\n            <span>\r\n              ({count}x) {name}\r\n            </span>\r\n            <br />\r\n            <button onClick={() => addCardToDeck({ id, name })}> + </button>\r\n            <button onClick={() => removeCardFromDeck({ id })}> - </button>\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeckList;\r\n"]},"metadata":{},"sourceType":"module"}